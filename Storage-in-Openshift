# What is storage in openshift ?
================================
  > In OpenShift (just like Kubernetes), storage refers to persistent storage that is attached to your containers/pods.
  > Containers are ephemeral by default â€” if a pod dies, its filesystem is wiped out.
  > Storage solves this by providing Persistent Volumes (PVs) that survive pod restarts, rescheduling, or failures.
  > OpenShift manages storage with Kubernetes primitives:
      > PersistentVolume (PV): Actual storage resource (physical or cloud disk).
      > PersistentVolumeClaim (PVC): A request by a pod for storage.
  > Openshift leverages the k8s persistent volume framework to provision storage cluster.
  > Storage can be provisioned to an openshift cluster using any of the plugins listed here.
     local, NFS, Azure Disk, AWS ELB, & etc.
  > The storage added to the OpenShift cluster is available across the cluster as a single large pool of persistent volume resources. 
  > From these, Each project can claim the required amount of storage.Using PVC's.
  > This storage can then be used as persistent storage within the pods in each project.
# Why Do We Need Storage? (What Problems It Solves) :
=====================================================
               Problem Without Storage	                                                       How Storage Solves It
     Container files are lost when pod restarts.	                             Persistent storage preserves data across restarts.
 Stateful apps (like databases) cannot survive failures.	                  Persistent Volumes store DB data safely outside of the pod.
    Hard to manage storage manually for each app.         	              StorageClasses + PVC automate and simplify storage provisioning.
      No way to do backups or snapshots easily.	                                  Storage providers support snapshotting volumes.
Need to scale across multiple storage types (fast, slow, file, block).	      StorageClasses let you define multiple storage backends.

# Process/How to create a storage in OpenShift :
================================================
   > To create a storage, Go to OpenShift UI
   > Go to your project 
   > Click on "storage" tab from left side menu.
   > Click on "create a storage" button in the web console.
   > Fill in the name of the storage claim, And update the access mode.
        > "Single user mode" allows the volume to be mounted as read/write by single node only. 
        > The "Shared access mode" allows the volumes to be mounted by multiple nodes.
        > For read/write access and read-only mode allows the volume to be mounted by multiple nodes, But read only.
   > Once the access mode is selected, Add a size to create a persistent volume claim.
   > The created storage can now be attached to pods by adding a volume to the deployment configuration. 

# Where we can see the pods and how we can connect through cli on OpenShift :
=============================================================================
   > Open OpenShift UI
   > Go to your project 
   > Choose deployments Inside Application tab from left side
   > Choose your deployment 
   > Scroll down, You can see list of pods
  How to connect terminal :
   > Click on one of the pod
   > Choose terminal tab
   > Now you can execute the commands like ls and more.

# Demo of storage in OpenShift [Add persistent storage volume to pods]: 
=======================================================================
  > To add a persistent storage volume to pods, We first create a storage
  > Go to storage tab and clcik on create a storage.
  >  Fill in the name of the storage claim, And update the access mode.
        > "Single user mode" allows the volume to be mounted as read/write by single node only. 
        > The "Shared access mode" allows the volumes to be mounted by multiple nodes.
        > For read/write access and read-only mode allows the volume to be mounted by multiple nodes, But read only.
   > Once the access mode is selected, Add a size.
   > Click on create to create a storage(persistent volume claim).
   > Once created go to deployment configuration, 
   > Choose right deployment
   > Go to configuration tab inside deployment
   > Scroll down and you can see "Add storage" option under volumes section.
   > Click on "Add storage" option under vulumes.
   > Provide the path to mount the volume on the containers, Which happens to be (ex: /data) in our case.
   > Click on add.
   > If we no go back to the pod and access the terminal, and execute the (ls -l), We can see a new mount on "/data" .
   > Now you can create some file with some text content (example : echo "This is test content" > /data/testfile.txt) > Enter
   > Going back to UI and accessing the application now, We can see the data.
   > Increase and decrease the pod count and check if the data persists or not.
   
